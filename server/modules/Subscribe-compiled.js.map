{"version":3,"sources":["Subscribe.js"],"names":[],"mappings":"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","file":"Subscribe-compiled.js","sourcesContent":["const express = require('express');\r\nvar crypto = require('crypto');\r\nvar DataTypes = require(\"sequelize\");\r\n\r\nvar sequelize = require('../mysql/sequelize');\r\n\r\nDate.prototype.Format = function (fmt) { //author: meizz\r\n    var o = {\r\n        \"M+\": this.getMonth() + 1, //月份\r\n        \"d+\": this.getDate(), //日\r\n        \"h+\": this.getHours(), //小时\r\n        \"m+\": this.getMinutes(), //分\r\n        \"s+\": this.getSeconds(), //秒\r\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\r\n        \"S\": this.getMilliseconds() //毫秒\r\n    };\r\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n    for (var k in o)\r\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n    return fmt;\r\n};\r\n\r\nvar Subscribe = sequelize.define('wanchain_subscribe', {\r\n    email: DataTypes.STRING,\r\n    create_time: DataTypes.STRING\r\n}, {\r\n    instanceMethods: {\r\n        retrieveAll: function(onSuccess, onError) {\r\n            Subscribe.findAll({}, {raw: true}).success(onSuccess).error(onError);\r\n        },\r\n        retrieveById: function(user_id, onSuccess, onError) {\r\n            Subscribe.find({where: {id: user_id}}, {raw: true}).success(onSuccess).error(onError);\r\n        },\r\n        add: function(onSuccess, onError) {\r\n            var email = this.email;\r\n            var create_time = this.create_time;\r\n\r\n            Subscribe.build({ email: email, create_time: create_time })\r\n                .save().success(onSuccess).error(onError);\r\n        },\r\n        updateById: function(user_id, onSuccess, onError) {\r\n            var id = user_id;\r\n            var email = this.email;\r\n            var create_time = this.create_time;\r\n\r\n            Subscribe.update({ email: email,create_time: create_time},{where: {id: id} }).success(onSuccess).error(onError);\r\n        },\r\n        removeById: function(user_id, onSuccess, onError) {\r\n            Subscribe.destroy({where: {id: user_id}}).success(onSuccess).error(onError);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// IMPORT ROUTES\r\n// =============================================================================\r\nvar SubscribeRouter = express.Router();\r\n\r\n// on routes that end in /users\r\n// ----------------------------------------------------\r\nSubscribeRouter.route('/subscribe')\r\n\r\n// create a user (accessed at POST http://localhost:8080/api/users)\r\n    .post(function(req, res) {\r\n\r\n        var email = req.body.email; //bodyParser does the magic\r\n        var create_time = new Date().Format(\"yyyy-MM-dd hh:mm:ss\");\r\n\r\n        var subscribe = Subscribe.build({ email: email, create_time: create_time });\r\n\r\n        subscribe.add(function(success){\r\n                res.json({ message: 'Subscribe created!' });\r\n            },\r\n            function(err) {\r\n                res.send(err);\r\n            });\r\n    })\r\n\r\n    // get all the users (accessed at GET http://localhost:3001/api/users)\r\n    .get(function(req, res) {\r\n        var user = Subscribe.build();\r\n\r\n        user.retrieveAll(function(users) {\r\n            if (users) {\r\n                res.json(users);\r\n            } else {\r\n                res.send(401, \"User Not Found\");\r\n            }\r\n        }, function(error) {\r\n            res.send(\"User Not Found\");\r\n        });\r\n    });\r\n\r\n\r\nmodule.exports = SubscribeRouter;"]}